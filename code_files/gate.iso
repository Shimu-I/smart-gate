#include <Wire.h>
#include <Adafruit_PN532.h>

// I2C pin definitions for ESP32-S3
#define SDA_PIN 21
#define SCL_PIN 17

// Create PN532 instance
Adafruit_PN532 nfc(SDA_PIN, SCL_PIN);

void setup() {
  Serial.begin(9600);
  Serial.println("Initializing PN532 RFID reader (I2C mode)...");

  // Start I2C with defined pins
  Wire.begin(SDA_PIN, SCL_PIN);

  // Initialize PN532
  nfc.begin();

  uint32_t versiondata = nfc.getFirmwareVersion();
  if (!versiondata) {
    Serial.println("Didn't find PN532 chip. Check wiring or I2C mode jumpers.");
    while (1);
  }

  // Print PN532 info
  Serial.print("Found PN532 chip with firmware version: ");
  Serial.print((versiondata >> 16) & 0xFF, DEC);
  Serial.print('.');
  Serial.println((versiondata >> 8) & 0xFF, DEC);

  // Configure PN532 to read RFID tags
  nfc.SAMConfig();

  Serial.println("PN532 ready! Tap an RFID card...");
  Serial.println("--------------------------------------");
}

void loop() {
  uint8_t success;
  uint8_t uid[7];         // Buffer to store the returned UID
  uint8_t uidLength;      // Length of the UID (4 or 7 bytes depending on the card type)

  // Check for a card
  success = nfc.readPassiveTargetID(PN532_MIFARE_ISO14443A, uid, &uidLength);

  if (success) {
    Serial.print("RFID Card Detected! UID: ");
    for (uint8_t i = 0; i < uidLength; i++) {
      if (uid[i] < 0x10) Serial.print("0");  // leading zero
      Serial.print(uid[i], HEX);
      Serial.print(" ");
    }
    Serial.println();
    Serial.println("--------------------------------------");

    delay(2000); // Wait before next scan
  }
}
